import numpy as np

from tile_types import graphic_dt

import color


# Box chars
anan = 0x2502   # '│' BOX DRAWINGS LIGHT VERTICAL
anaa = 0x2524   # '┤' BOX DRAWINGS LIGHT VERTICAL AND LEFT
anaA = 0x2561   # '╡' BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE
AnAa = 0x2562   # '╢' BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE
nnAa = 0x2556   # '╖' BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE
nnaA = 0x2555   # '╕' BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE
AnAA = 0x2563   # '╣' BOX DRAWINGS DOUBLE VERTICAL AND LEFT
AnAn = 0x2551   # '║' BOX DRAWINGS DOUBLE VERTICAL
nnAA = 0x2557   # '╗' BOX DRAWINGS DOUBLE DOWN AND LEFT
AnnA = 0x255D   # '╝' BOX DRAWINGS DOUBLE UP AND LEFT
Anna = 0x255C   # '╜' BOX DRAWINGS UP DOUBLE AND LEFT SINGLE
annA = 0x255B   # '╛' BOX DRAWINGS UP SINGLE AND LEFT DOUBLE
nnaa = 0x2510   # '┐' BOX DRAWINGS LIGHT DOWN AND LEFT
aann = 0x2514   # '└' BOX DRAWINGS LIGHT UP AND RIGHT
aana = 0x2534   # '┴' BOX DRAWINGS LIGHT UP AND HORIZONTAL
naaa = 0x252C   # '┬' BOX DRAWINGS LIGHT DOWN AND HORIZONTAL
aaan = 0x251C   # '├' BOX DRAWINGS LIGHT VERTICAL AND RIGHT
nana = 0x2500   # '─' BOX DRAWINGS LIGHT HORIZONTAL
aaaa = 0x253C   # '┼' BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL
aAan = 0x255E   # '╞' BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE
AaAn = 0x255F   # '╟' BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE
AAnn = 0x255A   # '╚' BOX DRAWINGS DOUBLE UP AND RIGHT
nAAn = 0x2554   # '╔' BOX DRAWINGS DOUBLE DOWN AND RIGHT
AAnA = 0x2569   # '╩' BOX DRAWINGS DOUBLE UP AND HORIZONTAL
nAAA = 0x2566   # '╦' BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL
AAAn = 0x2560   # '╠' BOX DRAWINGS DOUBLE VERTICAL AND RIGHT
nAnA = 0x2550   # '═' BOX DRAWINGS DOUBLE HORIZONTAL
AAAA = 0x256C   # '╬' BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL
aAnA = 0x2567   # '╧' BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE
Aana = 0x2568   # '╨' BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE
nAaA = 0x2564   # '╤' BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE
naAa = 0x2565   # '╥' BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE
Aann = 0x2559   # '╙' BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE
aAnn = 0x2558   # '╘' BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE
nAan = 0x2552   # '╒' BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE
naAn = 0x2553   # '╓' BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE
AaAa = 0x256B   # '╫' BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE
aAaA = 0x256A   # '╪' BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE
anna = 0x2518   # '┘' BOX DRAWINGS LIGHT UP AND LEFT
naan = 0x250C   # '┌' BOX DRAWINGS LIGHT DOWN AND RIGHT









hardware_ch = np.array([
# 0   0     1     2     3     4          5     6     7     8     9           0     1     2     3     4           5     6     7     8     9           0 
    [0x20, 0x20, 0x20, 0x20, 0x20,      0x20, 0x20, nAAn, anan, AnAn,       anan, AnAn, anan, AnAn, anan,       AAnn, 0x20, 0x20, 0x20, 0x20,       0x20],
    [0x20, 0x20, 0x20, 0x20, 0x20,      0x20, 0x20, nana, naan, anan,       anan, anan, anan, anan, aann,       nana, 0x20, 0x20, 0x20, 0x20,       0x20],
    [nAAn, aAan, aann, 0x20, 0x20,      0x50, 0x20, nAaA, anna, 0x20,       0x20, 0x20, 0x20, 0x20, nnaa,       aAnA, 0x20, 0x20, 0x20, 0x20,       0x20],
    [nnaA, 0x20, naaa, 0x20, 0x20,      0x65, 0x20, nana, 0x50, 0x20,       0x20, 0x20, 0x20, 0x20, 0x20,       nana, 0x20, 0x20, 0x20, 0x20,       0x20],
    [nAan, 0x20, naaa, anan, aann,      0x72, 0x20, nAnA, 0x53, 0x20,       0x20, 0x20, 0x20, 0x20, 0x20,       nAnA, 0x20, 0x20, naAn, AAAn,       Aann],
    [nnAA, anaA, anna, 0x20, nana,      0x69, 0x20, nana, 0x55, 0x20,       0x20, 0x20, 0x20, 0x20, 0x20,       nana, 0x20, naan, AaAa, 0x20,       0x20],
    [nAAn, aAan, aann, 0x20, nana,      0x70, 0x20, nAaA, aann, 0x20,       0x20, 0x20, 0x20, 0x20, naan,       aAnA, 0x20, nana, nnAa, AnnA,       0x20],
    [nnaA, 0x20, naaa, 0x20, nana,      0x68, 0x20, nana, nnaa, anan,       anan, anan, anan, anan, anna,       nana, 0x20, nana, naAn, AAAn,       Aann],
    [nAan, 0x20, naaa, anan, aana,      0x65, 0x20, nnAA, anan, AaAn,       anan, AnAn, anan, AnAn, anan,       AnnA, 0x20, naaa, AaAa, 0x20,       0x20],
    [nnAA, anaA, anna, 0x20, nana,      0x72, 0x20, 0x20, 0x20, nana,       0x20, 0x20, 0x20, 0x20, 0x20,       0x20, 0x20, nana, nnAa, AnnA,       0x20],
    [nAAn, aAan, aann, 0x20, nana,      0x61, 0x20, 0x20, 0x20, nana,       0x20, 0x20, 0x20, 0x20, 0x20,       0x20, 0x20, nana, naAn, AAAn,       Aann],
    [nnaA, 0x20, naaa, 0x20, nana,      0x6C, 0x20, 0x20, 0x20, nana,       0x20, 0x20, 0x20, 0x20, 0x20,       0x20, 0x20, naaa, AaAa, 0x20,       0x20],
    [nAan, 0x20, naaa, anan, aana,      0x73, 0x20, 0x20, nAAn, anaA,       AAAn, anan, AAnn, 0x20, 0x20,       0x20, 0x20, nana, nnAa, AnnA,       0x20],
    [nnAA, anaA, anna, 0x20, nana,      0x20, 0x20, 0x20, nana, 0x43,       0x28, 0x20, nana, 0x20, 0x20,       0x20, 0x20, nana, 0x20, 0x20,       0x20],
    [0x20, 0x20, 0x20, 0x20, naaa,      anan, anan, anan, AAAA, 0x50,       0x20, 0x20, AAAA, anan, anan,       anan, anan, aana, 0x20, 0x20,       0x20],
    [nAAn, aAan, aann, 0x20, nana,      0x20, 0x20, 0x20, nana, 0x55,       0x29, 0x20, nana, 0x20, 0x20,       0x20, 0x20, nana, 0x20, 0x20,       0x20],
    [nnaA, 0x20, naaa, 0x20, nana,      0x20, 0x20, 0x20, nnAA, aAan,       AnAA, anan, AnnA, 0x20, 0x20,       0x20, 0x20, nana, naAn, AAnn,       0x20],
    [nAan, 0x20, naaa, anan, aana,      0x20, 0x20, 0x20, 0x20, nana,       0x20, 0x20, 0x20, 0x20, 0x20,       0x20, 0x44, naaa, AaAa, 0x20,       0x20],
    [nnAA, anaA, anna, 0x20, nana,      0x20, 0x20, 0x20, 0x20, nana,       0x20, 0x20, 0x20, 0x20, 0x20,       0x20, 0x61, nana, nnAa, AnAA,       Anna],
    [nAAn, aAan, aann, 0x20, nana,      0x20, 0x20, 0x20, 0x20, nana,       0x20, 0x20, 0x20, 0x20, 0x20,       0x20, 0x74, nana, naAn, AAnn,       0x20],
    [nnaA, 0x20, naaa, 0x20, nana,      0x20, 0x20, nAAn, anan, AnAA,       anan, anan, anan, AAnn, 0x20,       0x20, 0x61, naaa, AaAa, 0x20,       0x20],
    [nAan, 0x20, naaa, anan, aana,      0x20, 0x20, nana, 0x20, 0x20,       0x20, 0x20, 0x20, nana, 0x20,       0x20, 0x20, nana, nnAa, AnAA,       Anna],
    [nnAA, anaA, anna, 0x20, nana,      0x20, nAAn, anaA, AAAn, anan,       AAnn, 0x20, 0x20, nana, 0x20,       0x20, 0x20, nana, naAn, AAnn,       0x20],
    [nAAn, aAan, aann, 0x20, nana,      0x20, nana, 0x41, 0x28, 0x20,       nana, 0x20, 0x20, nana, 0x20,       0x20, 0x20, nnaa, AaAa, 0x20,       0x20],
    [nnaA, 0x20, naaa, 0x20, nana,      0x20, nAnA, 0x50, 0x20, 0x20,       nAnA, 0x20, nAAn, anaA, AAAn,       anan, AAnn, 0x20, nnAa, AnAA,       Anna],
    [nAan, 0x20, naaa, anan, anna,      0x20, nana, 0x55, 0x29, 0x20,       nana, 0x20, nana, 0x47, 0x28,       0x20, nana, 0x20, 0x20, 0x20,       0x20],
    [nnAA, anaA, anna, 0x20, 0x20,      0x20, nnAA, anan, AnAA, anan,       AnnA, 0x20, nAnA, 0x50, 0x20,       0x20, nAnA, 0x20, 0x20, 0x20,       0x20],
    [0x20, 0x20, 0x20, 0x20, 0x20,      0x20, 0x20, 0x20, 0x20, 0x20,       0x20, 0x20, nana, 0x55, 0x29,       0x20, nana, 0x20, 0x20, 0x20,       0x20],
    [0x20, 0x20, 0x20, 0x20, 0x20,      0x20, 0x20, 0x20, 0x20, 0x20,       0x20, 0x20, nnAA, anan, AnAA,       anan, AnnA, 0x20, 0x20, 0x20,       0x20],
])
hardware = np.array([[np.array((d, color.ui_subdued, (0, 0, 0)), dtype=graphic_dt) if (64 < d <= 90 or 96 < d <= 122) else np.array((d, color.ui_main, (0, 0, 0)), dtype=graphic_dt) for d in row] for row in hardware_ch])